apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  namespace: demo-app
  labels:
    app: demo-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 30000
        runAsGroup: 30000
        fsGroup: 30000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: demo-app
        image: ghcr.io/idvoretskyi/gitops-demo/demo-app@sha256:a5c9725df7e7e4f48ff1a9079bbf990f52dd219fe95d39e9a128e0d6c5e5aeb8
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 30000
          runAsGroup: 30000
          capabilities:
            drop:
            - ALL
            - NET_RAW
          seccompProfile:
            type: RuntimeDefault
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: app-cache
          mountPath: /app/.npm
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: app-cache
        emptyDir: {}